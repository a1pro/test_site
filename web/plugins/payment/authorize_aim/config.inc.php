<?php

if (!defined('INCLUDED_AMEMBER_CONFIG')) 
    die("Direct access to this location is not allowed");
 
$notebook_page = 'Authorize.Net AIM';
config_set_notebook_comment($notebook_page, 'Authorize.Net configuration');
if (file_exists($rm = dirname(__FILE__)."/readme.txt"))
    config_set_readme($notebook_page, $rm);
global $config;
require_once($config['root_dir']."/plugins/payment/cc_core/cc_core.inc.php");

add_config_field('payment.authorize_aim.login', 'API Login ID',
    'text', "can be found on the same page as transaction key",
    $notebook_page, 
    '');
add_config_field('payment.authorize_aim.tkey', 'Transaction Key',
    'text', 
    "The transaction key is generated by the system <br />
    and can be obtained from Merchant Interface. <br />
    To obtain the transaction key from the Merchant <br />
    Interface<br />
1. Log into the Merchant Interface<br />
2. Select Settings from the Main Menu<br />
3. Click on Obtain Transaction Key in the Security section<br />
4. Type in the answer to the secret question configured on setup<br />
5. Click Submit<br />",
    $notebook_page, 
    '');
add_config_field('payment.authorize_aim.wells_fargo', 'Wells Fargo Mode',
    'select', "if you are Wells Fargo merchant, please set it to YES",
    $notebook_page, 
    '','','',
    array('options' => array(0 => 'No (default)', 1 => 'Yes')));
add_config_field('payment.authorize_aim.testing', 'Test Mode Enabled',
    'select', "set to No after you complete testing",
    $notebook_page, 
    '','','',
    array('options' => array(0 => 'No', 1 => 'Yes')));

cc_core_add_config_items('authorize_aim', $notebook_page);
?>
